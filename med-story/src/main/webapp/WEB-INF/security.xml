<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">
		
	<global-method-security pre-post-annotations="enabled"/>

	<http use-expressions="true">
		<intercept-url pattern="/dashboard**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
		<intercept-url pattern="/dashboard/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
		<intercept-url pattern="/patients**" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/patients/**" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/patients-details/**" access="hasRole('ROLE_USER')" />
		
		<form-login login-page="/index.html" default-target-url="/dashboard.html" />
		<logout logout-url="/logout"/>
		<access-denied-handler error-page="/unauthorized.html"/>
		<custom-filter after="BASIC_AUTH_FILTER" ref="noCacheFilter"/>
	</http>
	
	<beans:bean id="noCacheFilter" class="mx.christez.medstory.filter.NoCacheFilter"/>

	<authentication-manager>
		<authentication-provider>
			<password-encoder hash="bcrypt"/>
			<jdbc-user-service data-source-ref="dataSource"
				authorities-by-username-query="select appuser.email, role.name from appuser
											   join appuser_role on appuser.id = appuser_role.users_id
											   join role on appuser_role.roles_id = role.id
											   where appuser.email = ?"
				users-by-username-query="select email, password, enabled from appuser where email = ?" />
		</authentication-provider>
	</authentication-manager>
</beans:beans>